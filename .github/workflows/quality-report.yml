name: Quality Report

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  quality-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Quality Report
      run: npm run quality:report
      
    - name: Upload Quality Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quality-report-${{ github.sha }}
        path: reports/
        retention-days: 30
        
    - name: Comment PR with Quality Report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const reportPath = path.join('reports', 'latest-report.json');
            const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
            
            const score = report.summary.score;
            const emoji = score >= 90 ? 'üéâ' : score >= 70 ? '‚ö†Ô∏è' : '‚ùå';
            const status = score >= 90 ? 'Excellent' : score >= 70 ? 'Good' : 'Needs Improvement';
            
            const comment = `
          ## ${emoji} Quality Report - ${status} (${score}%)
          
          **Commit:** \`${report.commit.hash}\`
          **Author:** ${report.commit.author}
          
          ### Results Summary
          - ‚úÖ **Passed:** ${report.summary.passed}
          - ‚ùå **Failed:** ${report.summary.failed}  
          - ‚ö†Ô∏è **Warnings:** ${report.summary.warnings}
          
          ### Detailed Results
          | Check | Status | Details |
          |-------|--------|---------|
          | ESLint | ${report.eslint.status === 'PASSED' ? '‚úÖ' : '‚ùå'} | ${report.eslint.errors} errors, ${report.eslint.warnings} warnings |
          | TypeScript | ${report.typescript.status === 'PASSED' ? '‚úÖ' : '‚ùå'} | ${report.typescript.errors} compilation errors |
          | Security | ${report.security.status === 'PASSED' ? '‚úÖ' : '‚ùå'} | ${report.security.total} vulnerabilities |
          | Build | ${report.build.status === 'PASSED' ? '‚úÖ' : '‚ùå'} | Bundle size check |
          | Performance | ${report.performance.status === 'PASSED' ? '‚úÖ' : '‚ö†Ô∏è'} | ${report.performance.score}% score |
          | Accessibility | ${report.accessibility.status === 'PASSED' ? '‚úÖ' : '‚ö†Ô∏è'} | ${report.accessibility.score}% compliance |
          
          ${score < 70 ? '**‚ö†Ô∏è Quality score is below threshold. Please address the issues before merging.**' : ''}
          
          [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not read quality report:', error.message);
          }
